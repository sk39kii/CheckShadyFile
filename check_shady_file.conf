##############################################################################
# 起動時オプション(未実装)
##############################################################################
[INIT]
# 
# 起動時に設定ファイルを指定します.
# (False/conf file path)
conf_file = False

# 起動時に出力ログファイルを指定します.
# (False/result log file path)
results_log = 

##############################################################################
# ファイルのチェック方法
##############################################################################
[FILE_READ]
#
# ここではファイルを読み込んでチェックする方法を設定します.
# チェック方法
#  * ファイルを開き、一度に全て読み込みチェック(READ)
#  * OSコマンドを用いる(OS) ※grepコマンドが使えること
# (READ/OS)
mode = READ

##############################################################################
# スキャン対象から除外するファイル
##############################################################################
[IGNORE]
#
# スキャン対象から除外したいファイルは、
# ignore.confに記載することでスキャン対象外となります. 
# ここではignore.conf以外で除外するファイルを設定します.
#
# ファイル名が2バイト文字の場合スキャン対象外とするか否かを設定します.
# (True/False)
file_name_wchar = True

# ファイル名の拡張子によって対象外とするファイルを指定します.
# 拡張子の文字列(カンマ区切り)   ※ピリオドは不要
file_ext = pdf,mo,log

##############################################################################
# バイナリファイル判定について
##############################################################################
[BINARY]
#
# バイナリファイルの判定にはMIMEを取得して判ししています.
# * ここでのバイナリとは実行ファイルや画像ファイル系のこと(text系以外)

# バイナリファイルはスキャン対象外とするか否かを設定します.
#  * MIMEタイプで判定します.
#  * Trueの場合、バイナリファイルを対象外としますが処理が遅くなる可能性があります.
# (False/True)
binary_reject = False

# バイナリファイル判定をMIMEでなくASCIIコードの08H以下のコードの有無のみで判定します.
# MIMEよりも簡易的な判定になりますのでMIMEのみでの判定より速いです.
#  * binary_reject==True時に有効になります.
# (True/False)
binary_simple_check = True

##############################################################################
# 判定パターンについて
##############################################################################
[SCAN]
#
# 怪しいファイルの判定は、複数のスキャンパターンを用いて判定しています.
# ここでは判定に用いるスキャンパターンの有効/無効を設定します.

# スキャンパターン1: 特定の文字列の有無をスキャンします
# (True/False)
scan1_enable = True
#
# 検索対象の文字列(カンマ区切り)
# * 設定された文字列のどれか1つでもヒットした場合は怪しいと判断します
scan1_word = eval/*

# スキャンパターン2: 特定の文字列の出現数をスキャンします
# (True/False)
scan2_enable = True

# 検索対象の文字列としきい値を辞書形式で設定します.
# {"検索対象の文字列1": しきい値, "検索対象の文字列2": しきい値}
# * しきい値は、出現数がこの数を超えた場合に怪しいファイルと判断する数です
# * バックスラッシュはエスケープしてください(例：\x -> \\x)
# * 設定された文字列がどれか1つでもしきい値以上の出現した場合は怪しいと判断します
scan2_word_dict = {"\\x": 80, "$GLOBALS": 40, "64_decode":1}

# scan2_word_dictにAND条件を適用する
# (False/True)
scan2_mode_and = False

##############################################################################
# スキャン結果の出力について
##############################################################################
[OUTPUT]
#
# スキャン結果を標準出力に出力します.
# 出力内容は怪しいファイルと判定したファイルが対象となります.
# 
# ここでは出力パターンの切り替えを行います.
# ALL:  出力内容を全て表示します
# FILE: ファイル名のみ表示します
# LINE: 出力結果を1行で表示します
# NONE: 標準出力に表示しません
# (LINE/ALL/FILE/NONE)
display = LINE

# 出力内容から除外するファイルの拡張子を設定します.
# ここで設定した拡張子のファイルはスキャンは実行しますが、
# 怪しいファイルと判定されても、スキャン結果の出力内容からは除外されます.
# 拡張子の文字列(カンマ区切り)   ※ピリオドは不要
file_ext = js,txt,po,md

# スキャン結果で怪しいと判定されたファイルのパスを
# 絶対パスで表示するか否かを設定します.
# ABS: 絶対パスで表示します
# REL: スキャン対象ディレクトリからみた相対パスで表示します
# CUR: カレントディレクトリからみた相対パスで表示します
# (ABS/REL/CUR)
file_path_rel = REL

# スキャン結果をログに出力するか否かを設定します.(未実装)
# (False/True)
results_log_enable = False
# ログに出力する場合にログのパスを設定します.(未実装)
# (./results.log)
results_log = ./result.log
# ログに出力する場合、ログファイル名にタイムスタンプを付与します.(未実装)
# (False/True)
result_log_tm = False

##############################################################################
# デバッグログ出力について
##############################################################################
[LOG]
#
# デバッグログを出力するか否かを設定します.
# (True/False)
enable = True

#
# ここではログレベルを設定します.(未実装)
# (CRITICAL < ERROR < WARNING < INFO < DEBUG)
level = INFO

##############################################################################
# スキャン結果の通知について
##############################################################################
[NOTICE]
#
# スキャン結果の通知先を設定します.
# * NONE: どこにも通知しません
# * MAIL: メールで通知します
# * SLACK: Slackに通知します(未実装)
# (NONE/MAIL/SLACK)
destination = NONE

# メール通知設定
# 通知先がメールの場合(destination=NONE)に有効
# SMTPサーバー
# (127.0.0.1)
mail_smtp = 
# 送信元アドレス
mail_from_addr = 
# 通知先アドレス(宛先が複数ある場合はカンマ区切り)
mail_to_addr = 
# 件名
# (CheckShadyFiles Results)
mail_subject = CheckShadyFiles Results

# OP25Bを利用する(Port=587 and Login Auth)
# OP25B環境で使用するポート
# (587)
mail_submission_port = 587
# ログイン
mail_login = 
# パスワード
mail_passwd = 
